#ifndef __qSlicerSelectParametersWidget_h
#define __qSlicerSelectParametersWidget_h

// Qt includes
#include <QStackedWidget>

// CTK includes
#include <ctkVTKObject.h>

// Volumes includes
#include "qSlicerSelectParametersWidgetsExport.h"

class vtkMRMLNode;
class qSlicerSelectParametersPrivate;

/// \ingroup Slicer_QtModules_Volumes
class Q_SLICER_QTMODULES_VOLUMES_WIDGETS_EXPORT qSlicerSelectParametersWidget : public QStackedWidget
{
  Q_OBJECT
  QVTK_OBJECT

public:
  /// Constructors
  typedef QStackedWidget Superclass;
  explicit qSlicerSelectParametersWidget(QWidget* parent=0);
  virtual ~qSlicerSelectParametersWidget();

public slots:
  /// Set the MRML node of interest
  void setMRMLVolumeNode(vtkMRMLNode* node);

protected slots:
  /// Internally use in case the current display widget should change when the
  /// volume node changes (typically if the LabelMap attribute is changed)
  void updateFromMRML(vtkObject* volume);
protected:
  QScopedPointer<qSlicerSelectParametersWidgetPrivate> d_ptr;

private:
  Q_DECLARE_PRIVATE(qSlicerSelectParametersWidget);
  Q_DISABLE_COPY(qSlicerSelectParametersWidget);
};

#endif
